from pydantic import BaseModel, ConfigDict
from typing import Optional

# Base Schema for data validation
class BookBase(BaseModel):
    title: str
    author: str
    publication_year: Optional[int] = None
    isbn: Optional[str] = None

# Schema for creating a book (all required fields in BookBase)
class BookCreate(BookBase):
    pass

# Schema for updating a book (all fields are optional)
class BookUpdate(BookBase):
    title: Optional[str] = None
    author: Optional[str] = None
    # We inherit and make fields optional

# Schema for reading a book (includes the ID generated by the DB)
class Book(BookBase):
    id: int
    
    # Configure Pydantic to work with SQLAlchemy models
    model_config = ConfigDict(from_attributes=True)